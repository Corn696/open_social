<?php

/**
 * @file
 * Install, update and uninstall functions for the social_user module.
 */

use Drupal\user\Entity\Role;
use Drupal\user\RoleInterface;

/**
 * Implements hook_install().
 *
 * Perform actions related to the installation of social_user.
 */
function social_user_install() {
  // Grant the default permissions for this feature.
  user_role_grant_permissions(
    RoleInterface::AUTHENTICATED_ID,
    [
      'cancel account',
      'change own username',
      'select account cancellation method',
    ]
  );
  user_role_grant_permissions(
    'verified',
    [
      'access user profiles',
    ]
  );
  user_role_grant_permissions(
    'contentmanager',
    [
      'access user profiles',
    ]
  );
  user_role_grant_permissions(
    'sitemanager',
    [
      'access user profiles',
      'view users',
      'block users',
      'administer navigation settings',
      'administer social_user settings',
      'assign contentmanager role',
      'assign sitemanager role',
      'assign verified role',
      'view blocked user',
    ]
  );
}

/**
 * Implements hook_update_last_removed().
 */
function social_user_update_last_removed() : int {
  // Removed all update hooks before 10.0.
  return 8810;
}

/**
 * Implements hook_update_dependencies().
 */
function social_user_update_dependencies(): array {
  // Run the update hook with the "Grant Profile permissions for the
  // Authenticated user role" only after an update hook "Reassign permissions
  // between roles" in social_core.
  $dependencies['social_user'][11002] = [
    'social_core' => 11002,
  ];

  return $dependencies;
}

/**
 * Create the default configuration for the verified immediately site setting.
 */
function social_user_update_11001(): void {
  $config = \Drupal::getContainer()->get('config.factory')->getEditable('social_user.settings');
  $config->set('verified_immediately', TRUE)->save();
}

/**
 * Grant Profile permissions for the Authenticated user role.
 */
function social_user_update_11002(): void {
  // Grant the Authenticated user new permissions.
  user_role_grant_permissions(
    RoleInterface::AUTHENTICATED_ID,
    [
      'cancel account',
      'change own username',
      'select account cancellation method',
    ]
  );
}

/**
 * Update permissions for the sitemanager role.
 */
function social_user_update_11003(): void {
  // Grant the sitemanagers new permissions.
  user_role_grant_permissions('sitemanager', [
    'assign verified role',
  ]);
}
